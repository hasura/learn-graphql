{"version":3,"sources":["components/Auth/auth0-variables.js","components/Auth/auth0-provider-with-history.js","components/Auth/LogoutBtn.js","components/Header.js","components/Auth/Login.js","components/Todo/TodoItem.js","components/Todo/TodoFilters.js","components/Todo/TodoPrivateList.js","components/Todo/TodoInput.js","components/Todo/TodoPrivateWrapper.js","components/Todo/TaskItem.js","components/Todo/TodoPublicList.js","components/Todo/TodoPublicWrapper.js","components/OnlineUsers/OnlineUser.js","components/OnlineUsers/OnlineUsersWrapper.js","hooks/useAccessToken.js","components/App.js","index.js"],"names":["AUTH_CONFIG","Auth0ProviderWithHistory","children","history","useHistory","domain","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","push","returnTo","pathname","audience","scope","LogoutBtn","logoutHandler","Button","id","variant","className","onClick","Header","Navbar","Brand","Collapse","Login","useAuth0","loading","loginWithRedirect","TodoItem","index","todo","checked","is_completed","type","onChange","htmlFor","title","e","preventDefault","stopPropagation","TodoFilters","todos","currentFilter","filterResultsFn","clearCompletedFn","filterResultsHandler","filter","clearCompletedButton","activeTodos","itemCount","length","GET_MY_TODOS","gql","TodoPrivateList","props","useState","clearInProgress","state","setState","filteredTodos","todoList","forEach","TodoPrivateListQuery","useQuery","error","data","console","ADD_TODO","TodoInput","isPublic","todoInput","setTodoInput","useMutation","update","cache","existingTodos","readQuery","query","newTodo","insert_todos","returning","writeQuery","onCompleted","addTodo","onSubmit","variables","placeholder","value","target","TodoPrivateWrapper","TaskItem","user","name","TodoPublicList","olderTodosAvailable","newTodosCount","is_public","map","newTodosNotification","toString","olderTodosMsg","TodoPublicWrapper","OnlineUser","OnlineUsersWrapper","onlineUsers","onlineUsersList","useAccessToken","idToken","setIdToken","getAccessTokenSilently","useEffect","getAccessToken","a","accessToken","log","message","sub","App","logout","ApolloClient","link","HttpLink","uri","headers","Authorization","process","REACT_APP_AUTH_GRAPHQL","InMemoryCache","client","ApolloProvider","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59b4560b.chunk.js","sourcesContent":["export const AUTH_CONFIG = {\n  domain: \"graphql-tutorials.auth0.com\",\n  clientId: \"P38qnFo1lFAQJrzkun--wEzqljVNGcWW\",\n  callbackUrl: \"http://localhost:3000/callback\",\n  afterLogout: \"http://localhost:3000\",\n  audience: \"hasura\",\n  scope: \"openid profile email\",\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nimport { AUTH_CONFIG } from \"./auth0-variables\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={AUTH_CONFIG.domain}\n      clientId={AUTH_CONFIG.clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={AUTH_CONFIG.audience}\n      scope={AUTH_CONFIG.scope}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LogoutBtn = ({ logoutHandler }) => (\n  <Button\n    id=\"qsLogoutBtn\"\n    variant=\"primary\"\n    className=\"btn-margin logoutBtn\"\n    onClick={logoutHandler}\n  >\n    Log Out\n  </Button>\n);\n\nexport default LogoutBtn;\n","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport LogoutBtn from \"./Auth/LogoutBtn\";\n\nconst Header = ({ logoutHandler }) => (\n  <Navbar className=\"justify-content-between\">\n    <Navbar.Brand>GraphQL Tutorial App</Navbar.Brand>\n    <Navbar.Collapse className=\"justify-content-end\">\n      <LogoutBtn logoutHandler={logoutHandler} />\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { Button } from \"react-bootstrap\";\n\nconst Login = () => {\n  const { loading, loginWithRedirect } = useAuth0();\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"overlay\">\n      <div className=\"overlay-content\">\n        <div className=\"overlay-heading\">\n          Welcome to the GraphQL tutorial app\n        </div>\n        <div className=\"overlay-message\">Please login to continue</div>\n        <div className=\"overlay-action\">\n          <Button\n            id=\"qsLoginBtn\"\n            variant=\"primary\"\n            className=\"btn-margin loginBtn\"\n            onClick={() => {\n              loginWithRedirect({});\n            }}\n          >\n            Log In\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst TodoItem = ({ index, todo }) => {\n  const removeTodo = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const toggleTodo = () => {};\n\n  return (\n    <li>\n      <div className=\"view\">\n        <div className=\"round\">\n          <input\n            checked={todo.is_completed}\n            type=\"checkbox\"\n            id={todo.id}\n            onChange={toggleTodo}\n          />\n          <label htmlFor={todo.id} />\n        </div>\n      </div>\n\n      <div className={\"labelContent\" + (todo.is_completed ? \" completed\" : \"\")}>\n        <div>{todo.title}</div>\n      </div>\n\n      <button className=\"closeBtn\" onClick={removeTodo}>\n        x\n      </button>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\n\nconst TodoFilters = ({\n  todos,\n  currentFilter,\n  filterResultsFn,\n  clearCompletedFn\n}) => {\n  const filterResultsHandler = filter => {\n    return () => {\n      filterResultsFn(filter);\n    };\n  };\n\n  // The clear completed button if these are personal todos\n  const clearCompletedButton = (\n    <button onClick={clearCompletedFn} className=\"clearComp\">\n      Clear completed\n    </button>\n  );\n\n  const activeTodos = todos.filter(todo => todo.is_completed !== true);\n\n  let itemCount = todos.length;\n  if (currentFilter === \"active\") {\n    itemCount = activeTodos.length;\n  } else if (currentFilter === \"completed\") {\n    itemCount = todos.length - activeTodos.length;\n  }\n\n  return (\n    <div className=\"footerList\">\n      <span>\n        {\" \"}\n        {itemCount} item\n        {itemCount !== 1 ? \"s\" : \"\"}\n      </span>\n\n      <ul>\n        <li onClick={filterResultsHandler(\"all\")}>\n          <a className={currentFilter === \"all\" ? \"selected\" : \"\"}>All</a>\n        </li>\n\n        <li onClick={filterResultsHandler(\"active\")}>\n          <a className={currentFilter === \"active\" ? \"selected\" : \"\"}>Active</a>\n        </li>\n\n        <li onClick={filterResultsHandler(\"completed\")}>\n          <a className={currentFilter === \"completed\" ? \"selected\" : \"\"}>\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {clearCompletedButton}\n    </div>\n  );\n};\n\nexport default TodoFilters;\n","import React, { useState, Fragment } from \"react\";\nimport { gql, useQuery } from '@apollo/client';\n\nimport TodoItem from \"./TodoItem\";\nimport TodoFilters from \"./TodoFilters\";\n\nconst GET_MY_TODOS = gql`\n  query getMyTodos {\n    todos(where: { is_public: { _eq: false} }, order_by: { created_at: desc }) {\n      id\n      title\n      created_at\n      is_completed\n  }\n }`;\n\nconst TodoPrivateList = props => {\n  const [state, setState] = useState({\n    filter: \"all\",\n    clearInProgress: false,\n  });\n\n  const filterResults = filter => {\n    setState({\n      ...state,\n      filter: filter\n    });\n  };\n\n  const clearCompleted = () => { };\n\n  const { todos } = props;\n  let filteredTodos = todos;\n  if (state.filter === \"active\") {\n    filteredTodos = todos.filter(todo => todo.is_completed !== true);\n  } else if (state.filter === \"completed\") {\n    filteredTodos = todos.filter(todo => todo.is_completed === true);\n  }\n\n  const todoList = [];\n  filteredTodos.forEach((todo, index) => {\n    todoList.push(<TodoItem key={index} index={index} todo={todo} />);\n  });\n\n  return (\n    <Fragment>\n      <div className=\"todoListWrapper\">\n        <ul>{todoList}</ul>\n      </div>\n\n      <TodoFilters\n        todos={filteredTodos}\n        currentFilter={state.filter}\n        filterResultsFn={filterResults}\n        clearCompletedFn={clearCompleted}\n        clearInProgress={state.clearInProgress}\n      />\n    </Fragment>\n  );\n};\n\n\nconst TodoPrivateListQuery = () => {\n  const { loading, error, data } = useQuery(GET_MY_TODOS);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    console.error(error);\n    return <div>Error!</div>;\n  }\n  return <TodoPrivateList todos={data.todos} />;\n};\n\nexport default TodoPrivateListQuery;\nexport { GET_MY_TODOS };\n","import React, { useState } from \"react\";\nimport { gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { GET_MY_TODOS } from './TodoPrivateList';\n\nconst ADD_TODO = gql`\n mutation ($todo: String!, $isPublic: Boolean!) {\n   insert_todos(objects: {title: $todo, is_public: $isPublic}) {\n     affected_rows\n     returning {\n       id\n       title\n       created_at\n       is_completed\n     }\n   }\n }\n`;\n\nconst TodoInput = ({ isPublic = false }) => {\n  const [todoInput, setTodoInput] = useState('');\n  const updateCache = (cache, { data }) => {\n    // If this is for the public feed, do nothing\n    if (isPublic) {\n      return null;\n    }\n    // Fetch the todos from the cache\n    const existingTodos = cache.readQuery({\n      query: GET_MY_TODOS\n    });\n    // Add the new todo to the cache\n    const newTodo = data.insert_todos.returning[0];\n    cache.writeQuery({\n      query: GET_MY_TODOS,\n      data: { todos: [newTodo, ...existingTodos.todos] }\n    });\n  };\n  const resetInput = () => {\n    setTodoInput('');\n  };\n  const [addTodo] = useMutation(ADD_TODO, {\n    update: updateCache,\n    onCompleted: resetInput\n  });\n  return (\n    <form\n      className=\"formInput\"\n      onSubmit={e => {\n        e.preventDefault();\n        addTodo({ variables: { todo: todoInput, isPublic } });\n      }}\n    >\n      <input className=\"input\" placeholder=\"What needs to be done?\" value={todoInput}\n        onChange={e => (setTodoInput(e.target.value))} />\n      <i className=\"inputMarker fa fa-angle-right\" />\n    </form>\n  );\n};\n\nexport default TodoInput;\n","import React from \"react\";\n\nimport TodoInput from \"./TodoInput\";\nimport TodoPrivateList from \"./TodoPrivateList\";\n\nconst TodoPrivateWrapper = () => {\n  return (\n    <div className=\"todoWrapper\">\n      <div className=\"sectionHeader\">Personal todos</div>\n\n      <TodoInput />\n      <TodoPrivateList />\n    </div>\n  );\n};\n\nexport default TodoPrivateWrapper;\n","import React from \"react\";\n\nconst TaskItem = ({ index, todo }) => {\n  return (\n    <li>\n      <div className=\"userInfoPublic\" title={todo.user.name}>\n        @{todo.user.name}\n      </div>\n\n      <div className={\"labelContent\" + (todo.is_completed ? \" completed\" : \"\")}>\n        <div>{todo.title}</div>\n      </div>\n    </li>\n  );\n};\n\nexport default TaskItem;\n","import React, { Fragment } from \"react\";\n\nimport TaskItem from \"./TaskItem\";\n\nconst TodoPublicList = props => {\n  const state = {\n    olderTodosAvailable: true,\n    newTodosCount: 1,\n    todos: [\n      {\n        id: \"1\",\n        title: \"This is public todo 1\",\n        user: {\n          name: \"someUser1\"\n        }\n      },\n      {\n        id: \"2\",\n        title: \"This is public todo 2\",\n        is_completed: false,\n        is_public: true,\n        user: {\n          name: \"someUser2\"\n        }\n      },\n      {\n        id: \"3\",\n        title: \"This is public todo 3\",\n        user: {\n          name: \"someUser3\"\n        }\n      },\n      {\n        id: \"4\",\n        title: \"This is public todo 4\",\n        user: {\n          name: \"someUser4\"\n        }\n      }\n    ]\n  };\n\n  const loadNew = () => {};\n\n  const loadOlder = () => {};\n\n  let todos = state.todos;\n\n  const todoList = (\n    <ul>\n      {todos.map((todo, index) => {\n        return <TaskItem key={index} index={index} todo={todo} />;\n      })}\n    </ul>\n  );\n\n  let newTodosNotification = \"\";\n  if (state.newTodosCount) {\n    newTodosNotification = (\n      <div className={\"loadMoreSection\"} onClick={loadNew}>\n        New tasks have arrived! ({state.newTodosCount.toString()})\n      </div>\n    );\n  }\n\n  const olderTodosMsg = (\n    <div className={\"loadMoreSection\"} onClick={loadOlder}>\n      {state.olderTodosAvailable ? \"Load older tasks\" : \"No more public tasks!\"}\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <div className=\"todoListWrapper\">\n        {newTodosNotification}\n\n        {todoList}\n\n        {olderTodosMsg}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default TodoPublicList;\n","import React from \"react\";\n\nimport TodoInput from \"./TodoInput\";\nimport TodoPublicList from \"./TodoPublicList\";\n\nconst TodoPublicWrapper = () => {\n  return (\n    <div className=\"todoWrapper\">\n      <div className=\"sectionHeader\">Public feed (realtime)</div>\n\n      <TodoInput isPublic />\n      <TodoPublicList />\n    </div>\n  );\n};\n\nexport default TodoPublicWrapper;\n","import React from \"react\";\n\nconst OnlineUser = ({ user }) => {\n  return (\n    <div className=\"userInfo\">\n      <div className=\"userImg\">\n        <i className=\"far fa-user\" />\n      </div>\n      <div className=\"userName\">{user.name}</div>\n    </div>\n  );\n};\n\nexport default OnlineUser;\n","import React from \"react\";\n\nimport OnlineUser from \"./OnlineUser\";\n\nconst OnlineUsersWrapper = () => {\n  const onlineUsers = [{ name: \"someUser1\" }, { name: \"someUser2\" }];\n\n  const onlineUsersList = [];\n  onlineUsers.forEach((user, index) => {\n    onlineUsersList.push(<OnlineUser key={index} index={index} user={user} />);\n  });\n\n  return (\n    <div className=\"onlineUsersWrapper\">\n      <div className=\"sliderHeader\">Online users - {onlineUsers.length}</div>\n      {onlineUsersList}\n    </div>\n  );\n};\n\nexport default OnlineUsersWrapper;\n","import { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { AUTH_CONFIG } from \"../components/Auth/auth0-variables\";\n\nfunction useAccessToken() {\n  const [idToken, setIdToken] = useState(null);\n  const { user, getAccessTokenSilently } = useAuth0();\n  useEffect(() => {\n    const getAccessToken = async () => {\n      const { audience, scope } = AUTH_CONFIG;\n\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience,\n          scope,\n        });\n        setIdToken(accessToken);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n\n    getAccessToken();\n  }, [getAccessTokenSilently, user?.sub]);\n\n  return idToken;\n}\n\nexport default useAccessToken;\n","import React, { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport Header from \"./Header\";\nimport Login from \"./Auth/Login\";\nimport TodoPrivateWrapper from \"./Todo/TodoPrivateWrapper\";\nimport TodoPublicWrapper from \"./Todo/TodoPublicWrapper\";\nimport OnlineUsersWrapper from \"./OnlineUsers/OnlineUsersWrapper\";\n\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from '@apollo/client';\n\nimport useAccessToken from \"../hooks/useAccessToken\";\n\nconst createApolloClient = () => {\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: 'https://hasura.io/learn/graphql',\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_AUTH_GRAPHQL}`\n      }\n    }),\n    cache: new InMemoryCache(),\n  });\n};\n\nconst App = () => {\n  const idToken = useAccessToken();\n  const { loading, logout } = useAuth0();\n  const [client] = useState(createApolloClient(idToken));\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!idToken) {\n    return <Login />;\n  }\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <Header logoutHandler={logout} />\n        <div className=\"row container-fluid p-left-right-0 m-left-right-0\">\n          <div className=\"row col-md-9 p-left-right-0 m-left-right-0\">\n            <div className=\"col-md-6 sliderMenu p-30\">\n              <TodoPrivateWrapper />\n            </div>\n            <div className=\"col-md-6 sliderMenu p-30 bg-gray border-right\">\n              <TodoPublicWrapper />\n            </div>\n          </div>\n          <div className=\"col-md-3 p-left-right-0\">\n            <div className=\"col-md-12 sliderMenu p-30 bg-gray\">\n              <OnlineUsersWrapper />\n            </div>\n          </div>\n        </div>\n      </div>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { createBrowserHistory } from \"history\";\nimport Auth0ProviderWithHistory from \"./components/Auth/auth0-provider-with-history\";\n\nimport App from \"./components/App\";\nimport \"./styles/App.css\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Auth0ProviderWithHistory>\n        <App />\n      </Auth0ProviderWithHistory>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}